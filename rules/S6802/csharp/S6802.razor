@foreach (var button in Buttons)
{
    <button @key="button.Id" @onclick="button.Action"> @* Compliant *@
        Button #@button.Id
    </button>
}

@foreach (var button in Buttons)
{
    <button @key="button.Id" @onclick="(e) => button.Action(e)"> @* Noncompliant *@
        Button #@button.Id
    </button>
}

@for (int i = 0; i < Buttons.Count; i++)
{
    var buttonNumber = i;
    <button @onclick="@(e => DoAction(e, Buttons[buttonNumber]))"> @* Noncompliant *@
        Button #@buttonNumber
    </button>
}

<button @onclick="(e) => Reset(e)">Reset</button> @* Compliant *@

@if (Buttons.Count > 0)
{
    <button @onclick="(e) => Reset(e)">Reset #2</button> @* Compliant *@
}

@code {
    private List<Button> Buttons { get; } = new();

    private void DoAction(MouseEventArgs e, Button button)
    {
    // Do something here
        Console.WriteLine(button.Id);
    }

    private class Button
    {
        public string? Id { get; } = Guid.NewGuid().ToString();
        public Action<MouseEventArgs> Action { get; set; } = e => { };
    }

    private void Reset(MouseEventArgs mouseEventArgs)
    {
        throw new NotImplementedException();
    }
}