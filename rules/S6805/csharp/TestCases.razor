@page "/pagedata"
@inject IJSRuntime JSRuntime

<p role="status">Current height: @height</p>

@code {
    private int height;

    protected override async void OnInitialized()
    {
        height = await JSRuntime.InvokeAsync<int>("getHeight"); // Noncompliant
        await InvokeAsync(StateHasChanged);
        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        height = await JSRuntime.InvokeAsync<int>("getHeight"); // Noncompliant
        await InvokeAsync(StateHasChanged);
        await base.OnInitializedAsync();
    }

    protected override async void OnParametersSet()
    {
        height = await JSRuntime.InvokeAsync<int>("getHeight"); // Noncompliant
        await InvokeAsync(StateHasChanged);
        base.OnParametersSet();
    }

    protected override async Task OnParametersSetAsync()
    {
        height = await JSRuntime.InvokeAsync<int>("getHeight"); // Noncompliant
        await InvokeAsync(StateHasChanged);
        await base.OnParametersSetAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            height = await JSRuntime.InvokeAsync<int>("getHeight"); // Compliant
            await InvokeAsync(StateHasChanged);
        }
        await base.OnAfterRenderAsync(firstRender);
    }

}