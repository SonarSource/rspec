$PATH/unprotected_formatting.adoc:1 
Using backquotes does not protect against asciidoc interpretation. Starting or
ending a word with '*', '#', '_' or having two of them consecutively will
trigger unintended behavior with the rest of the text.
Use ``++*careful++`` to avoid that.
If you really want to have formatting inside your code, you can write
``pass:n[*careful]``

$PATH/unprotected_formatting.adoc:3 
Using backquotes does not protect against asciidoc interpretation. Starting or
ending a word with '*', '#', '_' or having two of them consecutively will
trigger unintended behavior with the rest of the text.
Use ``++unpro**tected++`` to avoid that.
If you really want to have formatting inside your code, you can write
``pass:n[unpro**tected]``

$PATH/unprotected_formatting.adoc:5 
Using backquotes does not protect against asciidoc interpretation. Starting or
ending a word with '*', '#', '_' or having two of them consecutively will
trigger unintended behavior with the rest of the text.
Use ``++~flags~++`` to avoid that.
If you really want to have formatting inside your code, you can write
``pass:n[~flags~]``

$PATH/unprotected_formatting.adoc:7 
Using backquotes does not protect against asciidoc interpretation. Starting or
ending a word with '*', '#', '_' or having two of them consecutively will
trigger unintended behavior with the rest of the text.
Use ``++_problems_++`` to avoid that.
If you really want to have formatting inside your code, you can write
``pass:n[_problems_]``

